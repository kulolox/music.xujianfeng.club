{"version":3,"sources":["components/ListButton/index.module.less","store/playerSlice.ts","components/Volume/index.tsx","components/ScrollContainer/index.tsx","components/Lyric/index.tsx","components/ListButton/index.tsx","components/Audio/index.tsx","components/Controller/index.tsx","components/Player/index.tsx","components/PlayerBox/index.tsx","App.tsx","serviceWorker.ts","store/rootReducer.ts","store/index.ts","index.tsx","components/IconFont/index.tsx","components/Player/index.module.less","hooks/index.ts","components/Duration/index.tsx","components/PlayerBox/index.module.less","components/Controller/index.module.less","api/config.ts","api/request.ts","api/index.ts","components/Volume/index.module.less","components/ScrollContainer/index.module.less","components/Lyric/index.module.less"],"names":["module","exports","getSongUrlById","createAsyncThunk","data","a","dispatch","setPlaying","getSongUrl","id","res","autoPlay","index","url","playerSlice","createSlice","name","initialState","currentIndex","currentUrl","playing","loop","volume","playedSeconds","list","extraReducers","builder","addCase","fulfilled","state","action","payload","reducers","setSongList","changeVolume","setPlayedSconds","setCurrentUrl","setCurrentIndex","togglePlaying","actions","Volume","useSelector","player","useDispatch","ref","useRef","useState","showVolume","setShowVolume","useOnClickOutside","onVolumeChange","useCallback","val","toggleVolume","onVolumeAfterChange","className","styles","onClick","type","icon","IconFont","classNames","content","hide","value","min","max","onChange","onAfterChange","ScrollContainer","props","children","getContainerDom","React","slideBlockStyle","setSlideBlockStyle","hasScrollBar","setHasScrollBar","container","parseDom","dom","current","clientHeight","scrollHeight","scrollTop","slideBlockHeight","slideBlockTop","height","top","handelScroll","e","target","useEffect","containerDom","addEventListener","removeEventListener","scrollContent","scrollBar","style","timeExp","scroll","distance","start","maxScrollTop","window","requestAnimationFrame","work","timestamp","t","progress","easeCubicInOut","newScrollTop","Lyric","formatLyrics","useMemo","lyricStr","lines","split","lyricArr","i","length","line","result","exec","txt","replace","trim","push","time","sort","b","parseLyric","lyric","timeRange","map","lyr","lyricDom","document","getElementsByClassName","activeIndex","setActiveIndex","setContainer","range","len","indexOf","getTimeIndex","offsetTop","lyrContainer","active","key","ListButton","showContainer","setShowContainer","setLyric","toggleContainer","play","findIndex","getSongLyric","lrc","fetch","button","count","overflowCount","size","offset","backImg","backgroundImage","coverImgUrl","listBox","head","item","songName","songCreator","authors","second","Duration","seconds","canPlaying","shape","lyricBox","noLyric","Audio","RPlayer","onTimeUpdate","currentTime","onDuration","duration","onEnded","pause","useEventListener","src","preload","Controller","hasPrevSong","prevSong","hastSong","togglePlay","hasNextSong","nextSong","controller","disabled","fontSize","Player","progressValue","setProgressValue","setCurrentTime","setDuration","seeking","setSeeking","progressChange","progressAfterChange","audio","main","coverImage","spin","defaultValue","step","tooltipVisible","Math","floor","menu","PlayerBox","isLock","setLock","toggltLock","playerBox","locked","lockBox","Home","lazy","Album","App","useLocalStorage","Suspense","fallback","path","exact","component","Boolean","location","hostname","match","rootReducer","combineReducers","playerReducer","middleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","devTools","process","require","default","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","createFromIconfontCN","scriptUrl","initialValue","localStorage","getItem","JSON","parse","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useRouter","params","useParams","useLocation","history","useHistory","useRouteMatch","pathname","query","queryString","search","eventName","handler","element","savedHandler","targetElement","eventListener","event","listener","contains","moment","Date","utcOffset","format","axiosConfig","baseURL","transformResponse","timeout","responseType","maxContentLength","validateStatus","status","pending","cancelToken","axios","CancelToken","removePending","config","p","method","cancel","splice","request","create","interceptors","use","c","Promise","reject","response","baseUrl","getBanner","get","getCatlist","getAlbumList","limit","cat","order","getAlbumDetail","getSongList","ids"],"mappings":"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","file":"static/js/main.98073e2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"a6LQ8jH5s49G351r4ry7A\",\"button\":\"_3K96JepUZHFKVptpAKLmjX\",\"container\":\"_2Ex41Yg_HOsOU7-4IRjHd6\",\"backImg\":\"_2QytdlD314vM28E_GjkCsB\",\"content\":\"_2sVBbfzRY1t02kW6eFtVUL\",\"listBox\":\"_1Hhoot-IWJearnO66CCcGc\",\"item\":\"_1ipFW7xxMy_LMa93DRLtAm\",\"index\":\"_2ZaAShsI4txn8XRiKMSyNh\",\"songName\":\"_3Rd8d84-JHQMmWw5400qST\",\"songCreator\":\"_1ws7ebM5Qg-eWBGUyDKofa\",\"second\":\"_16OakXNbCl67ve9HL3mlJw\",\"canPlaying\":\"_3XqRWv2yA9kg7k6hWTjJR4\",\"lyricBox\":\"_35EbM6I0BzHk5Qtw_KG4iq\",\"noLyric\":\"_1-sA9-yTHUVggM-APKVpas\",\"head\":\"_2H1WObJgHWY9rZqdPvlqBV\",\"hide\":\"eYsMHA9E5E1QSuKHxSRBQ\"};","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getSongUrl } from '@/api';\nimport { IPlayerDefaultState } from '@/interfaces';\n\nconst defaultState: IPlayerDefaultState = {\n  currentIndex: -1,\n  currentUrl: '',\n  playing: false,\n  loop: false,\n  volume: 60,\n  playedSeconds: 0,\n  list: [],\n};\n\n// 每次播放都重新获取歌曲url\nexport const getSongUrlById = createAsyncThunk(\n  'player/getSongUrl',\n  async (data: any, { dispatch }) => {\n    // 播放前先关闭播放状态\n    dispatch(setPlaying(false))\n    // 重新获取歌曲url\n    const res = await getSongUrl(data.id);\n    return {\n      autoPlay: data.autoPlay,\n      index: data.index,\n      url: res.data.data[0].url,\n    };\n  },\n);\n\nconst playerSlice = createSlice({\n  name: 'player',\n  initialState: defaultState,\n  extraReducers: builder => {\n    builder.addCase(getSongUrlById.fulfilled, (state, action) => {\n      const { index, url, autoPlay } = action.payload\n      state.currentIndex = index\n      state.currentUrl = url\n      // 根据传递参数决定是否自动播放\n      state.playing = autoPlay;\n    });\n  },\n  reducers: {\n    setSongList: (state, action) => {\n      state.list = action.payload.data;\n      state.currentIndex = 0;\n    },\n    changeVolume: (state, action) => {\n      state.volume = action.payload.volume\n    },\n    setPlayedSconds: (state, action) => {\n      state.playedSeconds = action.payload.playedSeconds;\n    },\n    setPlaying: (state, action) => {\n      state.playing = action.payload.playing;\n    },\n    setCurrentUrl: (state, action) => {\n      state.currentUrl = action.payload.url;\n    },\n    setCurrentIndex: (state, action) => {\n      state.currentIndex = action.payload.index;\n    },\n    togglePlaying: (state, action) => {\n      const { playing } = action.payload;\n      state.playing = playing;\n    },\n  },\n});\n\nexport const {\n  setSongList,\n  setCurrentIndex,\n  setCurrentUrl,\n  changeVolume,\n  togglePlaying,\n  setPlaying,\n  setPlayedSconds,\n} = playerSlice.actions;\n\nexport default playerSlice.reducer;\n","import React, { useCallback, useRef, useState } from 'react';\nimport { Slider, Button } from 'antd';\nimport classNames from 'classnames';\nimport IconFont from '@components/IconFont';\nimport { useOnClickOutside } from '@/hooks';\nimport { changeVolume } from '@/store/playerSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\nimport styles from './index.module.less';\n\nconst Volume = () => {\n  const { volume } = useSelector((state: RootState) => state.player);\n  const dispatch = useDispatch();\n\n  const ref = useRef(null);\n  const [showVolume, setShowVolume] = useState(false);\n  useOnClickOutside(ref, () => setShowVolume(false));\n\n  const onVolumeChange = useCallback(\n    val => {\n      dispatch(changeVolume({ volume: val }));\n    },\n    [dispatch],\n  );\n\n  const toggleVolume = useCallback(val => {\n    setShowVolume(val);\n  }, []);\n\n  const onVolumeAfterChange = useCallback(\n    val => {\n      toggleVolume(false);\n    },\n    [toggleVolume],\n  );\n\n  return (\n    <div className={styles.volume} ref={ref}>\n      <Button\n        onClick={() => toggleVolume(!showVolume)}\n        type=\"text\"\n        icon={<IconFont type=\"icon-volume\" />}\n      />\n      <div className={classNames(styles.content, { [styles.hide]: !showVolume })}>\n        <Slider\n          value={volume}\n          min={0}\n          max={100}\n          onChange={onVolumeChange}\n          onAfterChange={onVolumeAfterChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Volume;\n","import React, { ReactNode, useEffect, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.less';\n\ninterface IProps {\n  children: ReactNode;\n  className?: string;\n  getContainerDom?: Function;\n}\n\nconst ScrollContainer = (props: IProps) => {\n  const { className, children, getContainerDom } = props;\n  const [slideBlockStyle, setSlideBlockStyle] = React.useState<object>({});\n  const [hasScrollBar, setHasScrollBar] = React.useState(true);\n  const container = useRef<HTMLDivElement>(null);\n\n  // 解析滚动条\n  const parseDom = useCallback((dom = container.current) => {\n    if (!dom) return;\n    const { clientHeight, scrollHeight, scrollTop } = dom;\n    // 滑块高度\n    const slideBlockHeight = clientHeight ** 2 / scrollHeight;\n    // 滑块距离顶部距离\n    const slideBlockTop =\n      (scrollTop * (clientHeight - slideBlockHeight)) / (scrollHeight - clientHeight);\n\n    if (slideBlockTop !== slideBlockTop) {\n      setHasScrollBar(false);\n    } else {\n      setHasScrollBar(true);\n      setSlideBlockStyle({\n        height: slideBlockHeight, // 滑块高度\n        top: slideBlockTop, // 滑块距离顶部距离\n      });\n    }\n  }, []);\n\n  const handelScroll = React.useCallback(\n    e => {\n      parseDom(e.target);\n    },\n    [parseDom],\n  );\n\n  useEffect(() => {\n    const containerDom = container.current!;\n    // 滚动容器dom传递到父组件\n    if (getContainerDom) {\n      getContainerDom(containerDom);\n    }\n    containerDom.addEventListener('scroll', handelScroll);\n    return () => containerDom.removeEventListener('scroll', handelScroll);\n  }, [getContainerDom, handelScroll]);\n\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div ref={container} className={styles.scrollContent}>\n        {children}\n      </div>\n      {hasScrollBar && (\n        <div className={styles.scrollBar}>\n          <span style={{ ...slideBlockStyle }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScrollContainer;\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport { easeCubicInOut } from 'd3-ease';\nimport ScrollContainer from '@components/ScrollContainer';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\nimport styles from './index.module.less';\n\ninterface ILyric {\n  time: number;\n  txt: string;\n}\n\nconst timeExp = /\\[(\\d{2}):(\\d{2}\\.\\d{1,3})\\]/g;\n\nconst BASELINE = 180;\n\n// 解析歌词\nconst parseLyric = (lyricStr: string) => {\n  if (!lyricStr) return [];\n  const lines = lyricStr.split('\\n');\n  let lyricArr: ILyric[] = [];\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    let result: any = timeExp.exec(line);\n    if (result) {\n      // 去掉时间，留下歌词部分\n      const txt = line.replace(timeExp, '').trim();\n      if (txt) {\n        lyricArr.push({\n          time: result[1] * 60 + result[2] * 1,\n          txt,\n        });\n      }\n    }\n  }\n  lyricArr.sort((a, b) => a.time - b.time);\n  return lyricArr;\n};\n\n/**\n *\n * @param time 当前播放进度\n * @param range 歌词提取出的时间数组\n */\nconst getTimeIndex = (time: number, range: number[]) => {\n  const len = range.length;\n  if (time <= range[0]) return 0;\n  if (time >= range[len - 1]) return len - 1;\n  let index = 0;\n  for (const t of range) {\n    if (t > time) {\n      index = range.indexOf(t) - 1;\n      break;\n    }\n  }\n  return index;\n};\n\nconst scroll = (dom: HTMLDivElement, distance: number) => {\n  const duration = 600; // 动画持续时间(ms)\n  let state = 0;\n  let start: number | null = null;\n  const { scrollTop } = dom;\n  const maxScrollTop = distance - scrollTop;\n  const work = (timestamp: number) => {\n    if (!start) {\n      start = timestamp;\n    }\n    state = timestamp - start;\n    const t = state / duration;\n    let progress = easeCubicInOut(t);\n    if (progress > 1) {\n      progress = 1;\n    }\n    const newScrollTop = maxScrollTop * progress;\n    dom.scrollTop = newScrollTop + scrollTop;\n    if (progress < 1) {\n      window.requestAnimationFrame(work);\n    }\n  };\n  window.requestAnimationFrame(work);\n};\n\n// containerDom：滚动容器， 当前dom：dom\nconst srcollToActiveLine = (containerDom: any, dom: any) => {\n  if (!containerDom) return;\n  // 如果当前标亮的段落超过基准线，则滚动超过的部分\n  if (dom.offsetTop > BASELINE) {\n    scroll(containerDom, dom.offsetTop - BASELINE);\n  } else {\n    scroll(containerDom, 0);\n  }\n};\n\ninterface Iprops {\n  lyric: string;\n}\n\nconst Lyric = (props: Iprops) => {\n  const { playedSeconds } = useSelector((state: RootState) => state.player);\n  // 歌词解析时间轴数据\n  const formatLyrics = useMemo(() => parseLyric(props.lyric), [props.lyric]);\n  // 时间轴\n  const timeRange = useMemo(() => formatLyrics.map(lyr => lyr.time), [formatLyrics]);\n  // 歌词渲染dom\n  const lyricDom = useRef<any>(document.getElementsByClassName('lyric'));\n  // 当前播放歌词\n  const [activeIndex, setActiveIndex] = useState(0);\n  // 滚动容器\n  const [container, setContainer] = useState<HTMLDivElement | null>(null);\n\n  // 根据播放进度，确定当前歌词\n  useEffect(() => {\n    setActiveIndex(getTimeIndex(playedSeconds, timeRange));\n  }, [playedSeconds, timeRange]);\n\n  // 根据当前选中歌词dom,确定滚动\n  useEffect(() => {\n    if (lyricDom.current.length > 0) {\n      srcollToActiveLine(container, lyricDom.current[activeIndex]);\n    }\n  }, [activeIndex, container]);\n\n  return (\n    <ScrollContainer getContainerDom={(ref: HTMLDivElement) => setContainer(ref)}>\n      <div className={styles.lyrContainer}>\n        {formatLyrics.map((line, index) => (\n          <div\n            className={classNames('lyric', styles.line, {\n              [styles.active]: activeIndex === index,\n            })}\n            key={line.time + line.txt}\n          >\n            {line.txt}\n          </div>\n        ))}\n      </div>\n    </ScrollContainer>\n  );\n};\n\nexport default Lyric;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Badge } from 'antd';\nimport classNames from 'classnames'\nimport { useSelector, useDispatch } from 'react-redux';\nimport IconFont from '@components/IconFont';\nimport ScrollContainer from '@components/ScrollContainer';\nimport Duration from '@components/Duration';\nimport { RootState } from '@/store/rootReducer';\nimport { getSongUrlById } from '@/store/playerSlice';\nimport { getSongLyric } from '@/api';\nimport Lyric from '@components/Lyric';\nimport styles from './index.module.less';\n\nconst ListButton = () => {\n  const { list, playing, currentIndex } = useSelector((state: RootState) => state.player);\n  const dispatch = useDispatch();\n  const [showContainer, setShowContainer] = useState(false);\n  const [lyric, setLyric] = useState('');\n\n  const toggleContainer = useCallback(val => {\n    setShowContainer(val);\n  }, []);\n\n  const play = useCallback(\n    id => {\n      const index = list.findIndex(t => t.id === id);\n      dispatch(getSongUrlById({ id, index, autoPlay: true }));\n    },\n    [list, dispatch],\n  );\n\n  useEffect(() => {\n    // 初始化歌词\n    setLyric('');\n    // 获取歌词\n    const fetch = async () => {\n      const id = list[currentIndex]?.id;\n      if (id) {\n        const result = await getSongLyric(id);\n        if (result.data.lrc) {\n          setLyric(result.data.lrc.lyric);\n        }\n      }\n    };\n    fetch();\n  }, [currentIndex, list]);\n  \n  return (\n    <div className={styles.list}>\n      <Badge className={styles.button} count={list.length} overflowCount={99} size=\"small\" offset={[5, 0]}>\n        <Button\n          onClick={() => toggleContainer(!showContainer)}\n          type=\"text\"\n          icon={<IconFont type=\"icon-music-list\" />}\n        />\n      </Badge>\n        <div className={classNames(styles.container, { [styles.hide]: !showContainer })}>\n          <div\n            className={styles.backImg}\n            style={{ backgroundImage: `url('${list[currentIndex]?.coverImgUrl}')` }}\n          />\n          <div className={styles.content}>\n            <div className={styles.listBox}>\n              <div className={styles.head}>播放列表</div>\n              <ScrollContainer>\n                {list.map((item, index) => (\n                  <div key={item.id} className={styles.item}>\n                    <div className={styles.index}>{index + 1}</div>\n                    <div className={styles.songName}>{item.name}</div>\n                    <div className={styles.songCreator}>{item.authors}</div>\n                    <div className={styles.second}>\n                      <Duration seconds={item.seconds} />\n                    </div>\n                    <div className={styles.canPlaying}>\n                      <Button\n                        shape=\"circle\"\n                        type=\"ghost\"\n                        size=\"small\"\n                        onClick={() => play(item.id)}\n                        icon={\n                          index === currentIndex && playing ? (\n                            <IconFont type=\"icon-pause\" />\n                          ) : (\n                            <IconFont type=\"icon-play\" />\n                          )\n                        }\n                      />\n                    </div>\n                  </div>\n                ))}\n              </ScrollContainer>\n            </div>\n            <div className={styles.lyricBox}>\n              <div className={styles.head}>歌词</div>\n              {lyric ? <Lyric lyric={lyric} /> : <div className={styles.noLyric}>暂无歌词</div>}\n            </div>\n          </div>\n        </div>\n    </div>\n  );\n};\n\nexport default ListButton;\n","import React, { useRef, useEffect, useCallback } from 'react';\r\nimport { useEventListener } from '@/hooks';\r\n\r\ninterface Iprops {\r\n  src: string;\r\n  playing: Boolean;\r\n  currentTime: number;\r\n  volume: number;\r\n  onTimeUpdate: Function;\r\n  onEnded: Function;\r\n  onDuration: Function;\r\n}\r\n\r\nconst Audio = (props: Iprops) => {\r\n  const RPlayer = useRef<HTMLAudioElement>(null);\r\n  const onTimeUpdate = useCallback(\r\n    () => {\r\n      props.onTimeUpdate(RPlayer.current!.currentTime)\r\n    },\r\n    [props],\r\n  )\r\n  const onDuration = useCallback(\r\n    () => {\r\n      props.onDuration(RPlayer.current!.duration )\r\n    },\r\n    [props],\r\n  )\r\n  const onEnded = useCallback(\r\n    () => {\r\n      props.onEnded()\r\n    },\r\n    [props],\r\n  )\r\n\r\n  // 根据播放状态及当前歌曲切换播放暂停\r\n  useEffect(() => {\r\n    if (props.playing) {\r\n      RPlayer.current!.play();\r\n    } else {\r\n      RPlayer.current!.pause();\r\n    }\r\n  }, [props.playing]);\r\n\r\n  // 音量控制\r\n  useEffect(() => {\r\n    RPlayer.current!.volume = props.volume / 100;\r\n  }, [props.volume]);\r\n  \r\n  // 进度\r\n  useEffect(() => {\r\n    RPlayer.current!.currentTime = props.currentTime;\r\n  }, [props.currentTime]);\r\n\r\n  useEventListener('timeupdate', onTimeUpdate, RPlayer)\r\n  useEventListener('ended', onEnded, RPlayer)\r\n  useEventListener('durationchange', onDuration, RPlayer)\r\n  return (\r\n    <audio ref={RPlayer} src={props.src} preload=\"auto\" />\r\n  );\r\n};\r\n\r\nexport default Audio;\r\n","import React, { useCallback, useMemo } from 'react';\nimport { Button } from 'antd';\nimport IconFont from '@components/IconFont';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\nimport { getSongUrlById, togglePlaying } from '@/store/playerSlice';\nimport styles from './index.module.less';\n\nconst Controller = () => {\n  const { currentIndex, list, playing } = useSelector((state: RootState) => state.player);\n  const dispatch = useDispatch();\n\n  // 上一曲\n  const hasPrevSong = useMemo(() => currentIndex > 0, [currentIndex]);\n  const prevSong = useCallback(() => {\n    const index = currentIndex - 1;\n    dispatch(getSongUrlById({ id: list[index].id, index, autoPlay: true }));\n  }, [list, currentIndex, dispatch]);\n\n  // 播放暂停\n  const hastSong = useMemo(() => list.length > 0, [list]);\n  const togglePlay = useCallback(\n    val => {\n      dispatch(togglePlaying({ playing: val }));\n    },\n    [dispatch],\n  );\n\n  // 下一曲\n  const hasNextSong = useMemo(() => currentIndex < list.length - 1, [currentIndex, list]);\n  const nextSong = useCallback(() => {\n    const index = currentIndex + 1;\n    dispatch(getSongUrlById({ id: list[index].id, index, autoPlay: true }));\n  }, [list, currentIndex, dispatch]);\n\n  return (\n    <div className={styles.controller}>\n      <div className={styles.button}>\n        <Button\n          onClick={prevSong}\n          disabled={!hasPrevSong}\n          shape=\"circle\"\n          type=\"ghost\"\n          icon={<IconFont type=\"icon-prev\" />}\n        />\n      </div>\n      <div className={styles.button}>\n        <Button\n          disabled={!hastSong}\n          onClick={() => togglePlay(!playing)}\n          shape=\"circle\"\n          type=\"ghost\"\n          size=\"large\"\n          icon={\n            playing ? (\n              <IconFont style={{ fontSize: 25 }} type=\"icon-pause\" />\n            ) : (\n              <IconFont type=\"icon-play\" />\n            )\n          }\n        />\n      </div>\n      <div className={styles.button}>\n        <Button\n          onClick={nextSong}\n          disabled={!hasNextSong}\n          shape=\"circle\"\n          type=\"ghost\"\n          icon={<IconFont type=\"icon-next\" />}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Controller;\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Avatar, Slider } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '@/store/rootReducer';\r\nimport { setPlayedSconds, getSongUrlById, setPlaying } from '@/store/playerSlice';\r\nimport Duration from '@components/Duration';\r\nimport Volume from '@components/Volume';\r\nimport ListButton from '@components/ListButton';\r\nimport styles from './index.module.less';\r\nimport Audio from '@/components/Audio';\r\nimport Controller from '@/components/Controller';\r\n\r\nconst DEFAULT_COVER_IMAGE = 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png';\r\n\r\nconst Player = () => {\r\n  const { currentIndex, currentUrl, list, playing, volume } = useSelector(\r\n    (state: RootState) => state.player,\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [progressValue, setProgressValue] = useState(0); // 音频播放进度UI展示\r\n  const [currentTime, setCurrentTime] = useState(0); // 音频真实播放进度\r\n  // 总时长\r\n  const [duration, setDuration] = useState(0);\r\n  // 拖动进度条时不更新数据\r\n  const [seeking, setSeeking] = useState(false);\r\n\r\n  const onEnded = useCallback(() => {\r\n    if (currentIndex < list.length - 1) {\r\n      const index = currentIndex + 1;\r\n      dispatch(getSongUrlById({ id: list[index].id, index, autoPlay: true }));\r\n    } else {\r\n      dispatch(setPlaying({ playing: false }));\r\n    }\r\n  }, [list, currentIndex, dispatch]);\r\n\r\n  // audio ontimeupdate事件每隔250ms触发一次\r\n  const onTimeUpdate = useCallback(\r\n    time => {\r\n      dispatch(setPlayedSconds({ playedSeconds: time }));\r\n      if (!seeking) {\r\n        setProgressValue(time);\r\n      }\r\n    },\r\n    [dispatch, seeking],\r\n  );\r\n\r\n  const onDuration = useCallback(duration => {\r\n    setDuration(duration);\r\n  }, []);\r\n\r\n  // 进度条\r\n  const progressChange = useCallback(val => {\r\n    setSeeking(true);\r\n    setProgressValue(val);\r\n  }, []);\r\n  const progressAfterChange = useCallback(\r\n    val => {\r\n      setSeeking(false);\r\n      setCurrentTime(progressValue);\r\n    },\r\n    [progressValue],\r\n  );\r\n\r\n  // 当切换歌曲时，重置本地播放进度\r\n  useEffect(() => {\r\n    setProgressValue(0);\r\n    setCurrentTime(0);\r\n    setSeeking(false); // 歌曲自然播完会触发progressChange，而progressAfterChange不一定会触发，所以切换歌曲时人为触发seeking为false,防止onTimeUpdate，本地进度条无法更新\r\n  }, [currentIndex]);\r\n\r\n  return (\r\n    <div className={styles.player}>\r\n      <Audio\r\n        src={currentUrl}\r\n        playing={playing}\r\n        volume={volume}\r\n        currentTime={currentTime}\r\n        onDuration={onDuration}\r\n        onEnded={onEnded}\r\n        onTimeUpdate={onTimeUpdate}\r\n      />\r\n      <div className={styles.audio}>\r\n        <Controller />\r\n        <div className={styles.main}>\r\n          <Avatar\r\n            className={classNames(styles.coverImage, { [styles.spin]: playing })}\r\n            src={list[currentIndex]?.coverImgUrl ?? DEFAULT_COVER_IMAGE}\r\n          />\r\n          <div className={styles.content}>\r\n            <div className={styles.head}>\r\n              <div>{list[currentIndex]?.name ?? '暂无'}</div>\r\n              <div>\r\n                <Duration seconds={progressValue} />\r\n                /\r\n                <Duration seconds={duration} />\r\n              </div>\r\n            </div>\r\n            <div className={styles.progress}>\r\n              <Slider\r\n                onAfterChange={progressAfterChange}\r\n                onChange={progressChange}\r\n                defaultValue={0}\r\n                step={0.1}\r\n                tooltipVisible={false}\r\n                value={progressValue}\r\n                max={Math.floor(list[currentIndex]?.seconds)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.menu}>\r\n          <div className={styles.button}>\r\n            <Volume />\r\n          </div>\r\n          {/* <div className={styles.button}>\r\n            <Button type=\"text\" icon={<SyncOutlined color=\"#fff\" />} />\r\n          </div> */}\r\n          <div className={styles.button}>\r\n            <ListButton />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.less';\nimport IconFont from '../IconFont';\nimport Player from '../Player';\n\nconst PlayerBox = () => {\n  // TODO 播放器容器暂时展开\n  const [isLock, setLock] = useState(true);\n  const toggltLock = useCallback(val => {\n    setLock(val);\n  }, []);\n  return (\n    <div className={classNames(styles.playerBox, { [styles.locked]: isLock })}>\n      <div className={styles.lockBox} onClick={() => toggltLock(!isLock)}>\n        <IconFont type={isLock ? 'icon-lock_fill' : 'icon-unlock_fill'} />\n      </div>\n      <div className={styles.player}>\n        <Player />\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerBox;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PlayerBox from '@components/PlayerBox';\nimport { useDispatch } from 'react-redux';\nimport { useLocalStorage } from '@/hooks';\nimport { getSongUrlById, setSongList } from './store/playerSlice';\nimport './App.css';\nimport { ISong } from '@/interfaces';\n\nconst Home = React.lazy(() => import('@pages/home'));\nconst Album = React.lazy(() => import('@pages/album'));\n\nfunction App(): JSX.Element {\n  const dispatch = useDispatch();\n  const [data] = useLocalStorage<ISong[]>('cache-song-list', null);\n  // 初始化播放器数据\n  useEffect(() => {\n    if (data) {\n      // 载入缓存中的数据\n      dispatch(setSongList({ data }));\n      dispatch(getSongUrlById({ id: data[0].id, index: 0, autoPlay: false }));\n    }\n  }, [data, dispatch]);\n\n  return (\n    <Fragment>\n      <Router>\n        <React.Suspense fallback=\"加载中...\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/album/:id?\" exact component={Album} />\n          </Switch>\n        </React.Suspense>\n      </Router>\n      <PlayerBox />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport playerReducer from './playerSlice';\n\nconst rootReducer = combineReducers({\n  player: playerReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { useDispatch } from 'react-redux';\nimport rootReducer from './rootReducer';\n\nconst middleware = getDefaultMiddleware({\n  serializableCheck: false,\n  // serializableCheck: {\n  //   ignoredActions: ['player/setAudio'], // redux推荐只将可序列化的数据存入store，该配置忽略了该规则，因为我们需要全局共享audio实例\n  // },\n})\n\n// 开发模式添加logger插件\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(logger)\n}\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware,\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').defult;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport './index.css';\n\nconst render = (): void => {\n  const App = require('./App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\n\n// 热更新\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./App', render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createFromIconfontCN } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2060370_k34zyn39meh.js',\n});\n\nexport default IconFont;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverBox\":\"lxJgT-fjjXw_7rraI7bYO\",\"player\":\"_3DhximAgjXprNcUZvJJBb4\",\"audio\":\"_1Pe6zvjWU7bP1BxTzrxfas\",\"menu\":\"tgQynu_4eKMbG5-UX8NkB\",\"button\":\"rurHG8HbXrba9qsVi4f3_\",\"main\":\"_2LSEyGu8uCYgyGJBEVdlkJ\",\"coverImage\":\"_2pf_EtHe9NDw5Z8fvato1L\",\"spin\":\"_30ngn5ABA0-3TrCmuuUD_R\",\"rotate\":\"VV3QjzPv7HgLzppge8uuk\",\"content\":\"_2LqOGvkdyJ1x7e0HI66wJg\",\"head\":\"_1RbOSRgvGKJaxeyTPBFW7m\",\"progress\":\"G4ENEoFI9vPatAgt8CmgA\"};","import { useState, useRef, useEffect, useMemo, RefObject } from 'react';\nimport { useParams, useLocation, useHistory, useRouteMatch } from 'react-router-dom';\nimport queryString from 'query-string';\n\n// 缓存hook\nexport function useLocalStorage<T> (key:string, initialValue:T | null): [T, Function]{\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch(error) {\n      console.log(error)\n      return initialValue\n    }\n  })\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue): value\n      setStoredValue(valueToStore)\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch(error) {\n      console.log(error)\n    }\n  }\n  return [storedValue, setValue]\n}\n\n// 计时器hook\nexport const useInterval = (callback:Function, delay:number) => {\n  const savedCallback = useRef<Function | null>(null)\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback])\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current!();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n// 路由\nexport function useRouter() {\n  const params = useParams()\n  const location = useLocation()\n  const history = useHistory()\n  const match = useRouteMatch()\n  return useMemo(() => {\n    return {\n      // For convenience add push(), replace(), pathname at top level\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      // Merge params and parsed query string into single \"query\" object\n      // so that they can be used interchangeably.\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n      query: {\n        ...queryString.parse(location.search), // Convert string to object\n        ...params,\n      },\n      // Include match, location, history objects so we have\n      // access to extra React Router functionality if needed.\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history])\n}\n\n// 事件绑定hook\nexport function useEventListener<T extends HTMLElement = HTMLDivElement>(\n  eventName: string,\n  handler: Function,\n  element?: RefObject<T>,\n) {\n  // Create a ref that stores handler\n  const savedHandler = useRef<Function>()\n  useEffect(() => {\n    // Define the listening target\n    const targetElement: T | Window = element?.current || window\n    if (!(targetElement && targetElement.addEventListener)) {\n      return\n    }\n    // Update saved handler if necessary\n    if (savedHandler.current !== handler) {\n      savedHandler.current = handler\n    }\n    // Create event listener that calls handler function stored in ref\n    const eventListener = (event: Event) => {\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!savedHandler?.current) {\n        savedHandler.current(event)\n      }\n    }\n    targetElement.addEventListener(eventName, eventListener)\n    // Remove event listener on cleanup\n    return () => {\n      targetElement.removeEventListener(eventName, eventListener)\n    }\n  }, [eventName, element, handler])\n}\n\n// 他出点击hook\nexport function useOnClickOutside<T extends HTMLElement = HTMLDivElement>(ref:RefObject<T>, handler: Function) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n\n\n\n// debug用hook\nexport function useWhyDidYouUpdate(name: string, props:any) {\n  // Get a mutable ref object where we can store props ...\n  // ... for comparison next time this hook runs.\n  const previousProps = useRef<any>(null);\n\n  useEffect(() => {\n    if (previousProps.current) {\n      // Get all keys from previous and current props\n      const allKeys = Object.keys({ ...previousProps.current, ...props });\n      // Use this object to keep track of changed props\n      const changesObj: any = {};\n      // Iterate through keys\n      allKeys.forEach(key => {\n        // If previous is different from current\n        if (previousProps.current[key] !== props[key]) {\n          // Add to changesObj\n          changesObj[key] = {\n            from: previousProps.current[key],\n            to: props[key],\n          };\n        }\n      });\n\n      // If changesObj not empty then output to console\n      if (Object.keys(changesObj).length) {\n        console.log('[why-did-you-update]', name, changesObj);\n      }\n    }\n\n    // Finally update previousProps with current props for next hook call\n    previousProps.current = props;\n  });\n}\n","import React from 'react';\nimport moment from 'moment';\n\ninterface IProps {\n  className?: string;\n  seconds: number;\n}\n\nconst getDate = (seconds: number) => {\n  return new Date(seconds * 1000);\n};\n\nconst Duration = (props: IProps) => {\n  return (\n    <span className={props.className}>\n      {moment(getDate(props.seconds)).utcOffset(0).format('mm:ss')}\n    </span>\n  );\n};\n\nexport default Duration;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerBox\":\"_1URRVA-GI-BhQrZHYVMx7q\",\"lockBox\":\"_3x_32CtSBvIaSYOhs1xoFw\",\"locked\":\"_1KXt7a7thzbSV41Jrlm5r3\",\"player\":\"_2FmyDK_X0toHzM-xWlgwrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controller\":\"_1RgTyUoFi48_Me9I8Z8yKp\",\"button\":\"_2UyycXxm3cD0KQAIO731MN\"};","import { AxiosResponse, AxiosRequestConfig } from 'axios';\n\nconst axiosConfig: AxiosRequestConfig = {\n  baseURL: '/',\n  // 请求后的数据处理\n  transformResponse: [\n    function (data: AxiosResponse): AxiosResponse {\n      return data;\n    },\n  ],\n  timeout: 30000,\n  responseType: 'json',\n  // 最大响应数据大小\n  maxContentLength: 2000,\n  // 自定义错误状态码范围\n  validateStatus: function (status: number) {\n    return status >= 200 && status < 300;\n  },\n};\n\nexport default axiosConfig;\n","import axios, { AxiosRequestConfig } from 'axios';\nimport config from './config';\n\nconst pending: Array<{\n  url: string;\n  cancel: Function;\n}> = [];\n\nconst cancelToken = axios.CancelToken;\n\nconst removePending = (config: AxiosRequestConfig) => {\n  for (const p in pending) {\n    const item: any = p;\n    const list: any = pending[p];\n    // 当前请求在数组中存在时执行函数体\n    if (list.url === config.url + '&request_type=' + config.method) {\n      // 执行取消操作\n      list.cancel();\n      // 从数组中移除记录\n      pending.splice(item, 1);\n    }\n  }\n};\n\nconst request = axios.create(config);\n\n// 添加请求拦截器\nrequest.interceptors.request.use(\n  async config => {\n    removePending(config);\n    config.cancelToken = await new cancelToken(c => {\n      pending.push({\n        url: config.url + '&request_type=' + config.method,\n        cancel: c,\n      });\n    });\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  },\n);\n\n// 返回状态判断(添加响应拦截器)\nrequest.interceptors.response.use(\n  res => {\n    removePending(res.config);\n    return res;\n  },\n  error => {\n    return Promise.reject(error);\n  },\n);\n\nexport default request;\n","import request from './request';\nimport { AxiosResponse } from 'axios';\nconst baseUrl = 'https://api.xujianfeng.club';\n\n/**\n * 获取首页轮播图\n * @param {string} type [0:pc;1:android;2:iphone;3:ipad]\n */\nfunction getBanner(type: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/banner?type=${type}`);\n}\n\n/**\n * 获取歌单分类\n */\nfunction getCatlist(): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/catlist`);\n}\n\n/**\n * 获取歌单分类\n */\nfunction getHotCatlist(): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/hot`);\n}\n\n// 歌单查询参数\ninterface AlbumArg {\n  limit: number;\n  cat: string;\n  offset: number;\n  order?: string;\n}\n\n/**\n * 获取歌单\n */\nfunction getAlbumList({ limit, cat, offset = 0, order = 'hot' }: AlbumArg): Promise<AxiosResponse> {\n  return request.get(\n    `${baseUrl}/top/playlist/?limit=${limit}&order=${order}&offset=${offset}&cat=${cat}`,\n  );\n}\n\n/**\n * 获取（歌单）专辑 详情\n * @param {string} id\n */\nfunction getAlbumDetail(id: string): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/detail?id=${id}`);\n}\n\n/**\n * 获取歌曲列表\n * @param {string} id\n */\nfunction getSongList(ids: string): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/song/detail?ids=${ids}`);\n}\n\n/**\n * 获取歌曲播放链接\n * @param {number} id\n */\nfunction getSongUrl(id: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/song/url?id=${id}`);\n}\n\n/**\n * 获取歌曲歌词\n * @param {number} id\n */\nfunction getSongLyric(id: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/lyric?id=${id}`);\n}\n\nexport {\n  getBanner,\n  getCatlist,\n  getHotCatlist,\n  getAlbumList,\n  getAlbumDetail,\n  getSongList,\n  getSongUrl,\n  getSongLyric,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volume\":\"_14kz-6xQSn7TCbxYi2SFtB\",\"content\":\"UhJJOr8LRnntL8T0glbT2\",\"hide\":\"_3Pl9RIznKJR_Dad-3lltyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1y9RWNpnFF9NnWRjrpfKOK\",\"scrollContent\":\"_1lIo99iXuF_CW3FF83M_DZ\",\"scrollBar\":\"_1_rEIrL1zBBv65zuNSJ9E7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lyrContainer\":\"_1a6TKPrmA2yA-mdG0ocUF7\",\"line\":\"_3xHnyZFn_a2C6Pr6h7xKOP\",\"active\":\"Uiru2n3655rzFDIkKA2BE\"};"],"sourceRoot":""}