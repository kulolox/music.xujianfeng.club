{"version":3,"sources":["components/ListButton/index.module.less","components/Volume/index.tsx","components/ScrollContainer/index.tsx","components/Lyric/index.tsx","components/ListButton/index.tsx","components/Player/index.tsx","components/PlayerBox/index.tsx","App.tsx","serviceWorker.ts","store/rootReducer.ts","store/index.ts","index.tsx","components/Player/index.module.less","components/IconFont/index.tsx","store/playerSlice.ts","components/Duration/index.tsx","components/PlayerBox/index.module.less","api/config.ts","api/request.ts","api/index.ts","components/ScrollContainer/index.module.less","components/Lyric/index.module.less","components/Volume/index.module.less","store/albumSlice.ts"],"names":["module","exports","Volume","props","useState","volume","value","setVal","showVolume","setShowVolume","onVolumeChange","useCallback","val","onChange","onVolumeAfterChange","toggleVolume","className","styles","onClick","type","icon","IconFont","content","min","max","onAfterChange","ScrollContainer","children","getContainerDom","React","slideBlockStyle","setSlideBlockStyle","hasScrollBar","setHasScrollBar","container","useRef","parseDom","dom","current","clientHeight","scrollHeight","scrollTop","slideBlockHeight","slideBlockTop","height","top","handelScroll","e","target","useEffect","addEventListener","removeEventListener","classNames","ref","scrollContent","scrollBar","style","timeExp","scroll","distance","start","maxScrollTop","window","requestAnimationFrame","work","timestamp","t","progress","easeCubicInOut","newScrollTop","Lyric","playedSeconds","useSelector","state","player","formatLyrics","useMemo","lyricStr","lines","split","lyricArr","i","length","line","result","exec","txt","replace","trim","push","time","sort","a","b","parseLyric","lyric","timeRange","map","lyr","lyricDom","document","getElementsByClassName","activeIndex","setActiveIndex","setContainer","range","len","index","indexOf","getTimeIndex","containerDom","offsetTop","lyrContainer","active","key","ListButton","list","playing","currentIndex","dispatch","useDispatch","showContainer","setShowContainer","setLyric","toggleContainer","play","id","findIndex","getSongUrlById","getSongLyric","data","lrc","fetch","count","overflowCount","size","offset","backImg","backgroundImage","coverImgUrl","listBox","head","item","songName","name","songCreator","authors","second","Duration","seconds","canPlaying","shape","lyricBox","noLyric","Player","currentUrl","RPlayer","progressValue","setProgressValue","duration","setDuration","seeking","setSeeking","setVolume","hasPrevSong","hasNextSong","hastSong","togglePlay","togglePlaying","prevSong","nextSong","onEndedSong","setPlaying","onTimeUpdate","setPlayedSconds","currentTime","onDuration","progressChange","progressAfterChange","pause","src","preload","audio","controller","button","disabled","fontSize","main","coverImage","spin","defaultValue","tooltipVisible","Math","floor","menu","PlayerBox","isLock","setLock","toggltLock","playerBox","locked","lockBox","Home","lazy","Album","App","cache","localStorage","getItem","setSongList","JSON","parse","Suspense","fallback","path","exact","component","Boolean","location","hostname","match","rootReducer","combineReducers","album","albumReducer","playerReducer","getDefaultMiddleware","serializableCheck","logger","store","configureStore","reducer","devTools","process","middleware","require","default","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","createFromIconfontCN","scriptUrl","createAsyncThunk","getSongUrl","res","playerSlice","createSlice","initialState","loop","extraReducers","builder","addCase","fulfilled","action","payload","url","reducers","setCurrentIndex","actions","moment","Date","utcOffset","format","axiosConfig","baseURL","transformResponse","timeout","responseType","maxContentLength","validateStatus","status","pending","cancelToken","axios","CancelToken","removePending","config","p","method","cancel","splice","request","create","interceptors","use","c","Promise","reject","response","baseUrl","getBanner","get","getCatlist","getAlbumList","limit","cat","order","getAlbumDetail","getSongList","ids","albumSlice","info","albumId","nickname","tags","description","setInfo","setList"],"mappings":"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","file":"static/js/main.ae7f594f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"a6LQ8jH5s49G351r4ry7A\",\"container\":\"_2Ex41Yg_HOsOU7-4IRjHd6\",\"backImg\":\"_2QytdlD314vM28E_GjkCsB\",\"content\":\"_2sVBbfzRY1t02kW6eFtVUL\",\"listBox\":\"_1Hhoot-IWJearnO66CCcGc\",\"item\":\"_1ipFW7xxMy_LMa93DRLtAm\",\"index\":\"_2ZaAShsI4txn8XRiKMSyNh\",\"songName\":\"_3Rd8d84-JHQMmWw5400qST\",\"songCreator\":\"_1ws7ebM5Qg-eWBGUyDKofa\",\"second\":\"_16OakXNbCl67ve9HL3mlJw\",\"canPlaying\":\"_3XqRWv2yA9kg7k6hWTjJR4\",\"lyricBox\":\"_35EbM6I0BzHk5Qtw_KG4iq\",\"noLyric\":\"_1-sA9-yTHUVggM-APKVpas\",\"head\":\"_2H1WObJgHWY9rZqdPvlqBV\"};","import React, { useCallback, useState } from 'react';\nimport { Slider, Button } from 'antd';\nimport IconFont from '@components/IconFont';\nimport styles from './index.module.less';\n\ninterface IProps {\n  volume: number;\n  onChange: Function;\n}\n\nconst Volume = (props: IProps) => {\n  const [value, setVal] = useState(props.volume);\n  const [showVolume, setShowVolume] = useState(false);\n  const onVolumeChange = useCallback(val => {\n    setVal(val);\n    props.onChange(val);\n  }, []);\n\n  const onVolumeAfterChange = useCallback(val => {\n    toggleVolume(false);\n  }, []);\n\n  const toggleVolume = useCallback(val => {\n    setShowVolume(val);\n  }, []);\n\n  return (\n    <div className={styles.volume}>\n      <Button onClick={() => toggleVolume(!showVolume)} type=\"text\" icon={<IconFont type=\"icon-volume\" />} />\n      {showVolume && (\n        <div className={styles.content}>\n          <Slider value={value} min={0} max={100} onChange={onVolumeChange} onAfterChange={onVolumeAfterChange} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Volume;\n","import React, { ReactNode, useEffect, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.less';\n\ninterface IProps {\n  children: ReactNode;\n  className?: string;\n  getContainerDom?: Function;\n}\n\nconst ScrollContainer = (props: IProps) => {\n  const { className, children, getContainerDom } = props;\n  const [slideBlockStyle, setSlideBlockStyle] = React.useState<object>({});\n  const [hasScrollBar, setHasScrollBar] = React.useState(true);\n  const container = useRef<HTMLDivElement>(null);\n\n  // 解析滚动条\n  const parseDom = useCallback((dom = container.current) => {\n    if (!dom) return;\n    const { clientHeight, scrollHeight, scrollTop } = dom;\n    // 滑块高度\n    const slideBlockHeight = clientHeight ** 2 / scrollHeight;\n    // 滑块距离顶部距离\n    const slideBlockTop = (scrollTop * (clientHeight - slideBlockHeight)) / (scrollHeight - clientHeight);\n\n    if (slideBlockTop !== slideBlockTop) {\n      setHasScrollBar(false);\n    } else {\n      setHasScrollBar(true);\n      setSlideBlockStyle({\n        height: slideBlockHeight, // 滑块高度\n        top: slideBlockTop, // 滑块距离顶部距离\n      });\n    }\n  }, []);\n\n  const handelScroll = React.useCallback(e => {\n    parseDom(e.target);\n  }, []);\n\n  useEffect(() => {\n    // 滚动容器dom传递到父组件\n    if (getContainerDom) {\n      getContainerDom(container.current);\n    }\n    container.current!.addEventListener('scroll', handelScroll);\n    return () => container.current!.removeEventListener('scroll', handelScroll);\n  }, []);\n\n  return (\n    <div className={classNames(styles.container, className)}>\n      <div ref={container} className={styles.scrollContent}>\n        {children}\n      </div>\n      {hasScrollBar && (\n        <div className={styles.scrollBar}>\n          <span style={{ ...slideBlockStyle }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScrollContainer;\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport { easeCubicInOut } from 'd3-ease';\nimport ScrollContainer from '@components/ScrollContainer';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@/store/rootReducer';\nimport styles from './index.module.less';\n\ninterface ILyric {\n  time: number;\n  txt: string;\n}\n\nconst timeExp = /\\[(\\d{2}):(\\d{2}\\.\\d{1,3})\\]/g;\n\nconst BASELINE = 180;\n\n// 解析歌词\nconst parseLyric = (lyricStr: string) => {\n  if (!lyricStr) return [];\n  const lines = lyricStr.split('\\n');\n  let lyricArr: ILyric[] = [];\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    let result: any = timeExp.exec(line);\n    if (result) {\n      // 去掉时间，留下歌词部分\n      const txt = line.replace(timeExp, '').trim();\n      if (txt) {\n        lyricArr.push({\n          time: result[1] * 60 + result[2] * 1,\n          txt,\n        });\n      }\n    }\n  }\n  lyricArr.sort((a, b) => a.time - b.time);\n  return lyricArr;\n};\n\n/**\n *\n * @param time 当前播放进度\n * @param range 歌词提取出的时间数组\n */\nconst getTimeIndex = (time: number, range: number[]) => {\n  const len = range.length;\n  if (time <= range[0]) return 0;\n  if (time >= range[len - 1]) return len - 1;\n  let index = 0;\n  for (const t of range) {\n    if (t > time) {\n      index = range.indexOf(t) - 1;\n      break;\n    }\n  }\n  return index;\n};\n\nconst scroll = (dom: HTMLDivElement, distance: number) => {\n  const duration = 600; // 动画持续时间(ms)\n  let state = 0;\n  let start: number | null = null;\n  const { scrollTop } = dom;\n  const maxScrollTop = distance - scrollTop;\n  const work = (timestamp: number) => {\n    if (!start) {\n      start = timestamp;\n    }\n    state = timestamp - start;\n    const t = state / duration;\n    let progress = easeCubicInOut(t);\n    if (progress > 1) {\n      progress = 1;\n    }\n    const newScrollTop = maxScrollTop * progress;\n    dom.scrollTop = newScrollTop + scrollTop;\n    if (progress < 1) {\n      window.requestAnimationFrame(work);\n    }\n  };\n  window.requestAnimationFrame(work);\n};\n\n// containerDom：滚动容器， 当前dom：dom\nconst srcollToActiveLine = (containerDom: any, dom: any) => {\n  if (!containerDom) return;\n  // 如果当前标亮的段落超过基准线，则滚动超过的部分\n  if (dom.offsetTop > BASELINE) {\n    scroll(containerDom, dom.offsetTop - BASELINE);\n  } else {\n    scroll(containerDom, 0);\n  }\n};\n\ninterface Iprops {\n  lyric: string;\n}\n\nconst Lyric = (props: Iprops) => {\n  const { playedSeconds } = useSelector((state: RootState) => state.player);\n  // 歌词解析时间轴数据\n  const formatLyrics = useMemo(() => parseLyric(props.lyric), [props.lyric]);\n  // 时间轴\n  const timeRange = useMemo(() => formatLyrics.map(lyr => lyr.time), [formatLyrics]);\n  // 歌词渲染dom\n  const lyricDom = useRef<any>(document.getElementsByClassName('lyric'));\n  // 当前播放歌词\n  const [activeIndex, setActiveIndex] = useState(0);\n  // 滚动容器\n  const [container, setContainer] = useState<HTMLDivElement | null>(null);\n\n  // 根据播放进度，确定当前歌词\n  useEffect(() => {\n    setActiveIndex(getTimeIndex(playedSeconds, timeRange));\n  }, [playedSeconds]);\n\n  // 根据当前选中歌词dom,确定滚动\n  useEffect(() => {\n    if (lyricDom.current.length > 0) {\n      srcollToActiveLine(container, lyricDom.current[activeIndex]);\n    }\n  }, [activeIndex]);\n\n  return (\n    <ScrollContainer getContainerDom={(ref: HTMLDivElement) => setContainer(ref)}>\n      <div className={styles.lyrContainer}>\n        {formatLyrics.map((line, index) => (\n          <div\n            className={classNames('lyric', styles.line, {\n              [styles.active]: activeIndex === index,\n            })}\n            key={line.time + line.txt}\n          >\n            {line.txt}\n          </div>\n        ))}\n      </div>\n    </ScrollContainer>\n  );\n};\n\nexport default Lyric;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Badge } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport IconFont from '@components/IconFont';\nimport ScrollContainer from '@components/ScrollContainer';\nimport Duration from '@components/Duration';\nimport { RootState } from '@/store/rootReducer';\nimport { getSongUrlById } from '@/store/playerSlice';\nimport { getSongLyric } from '@/api';\nimport Lyric from '@components/Lyric';\nimport styles from './index.module.less';\n\nconst ListButton = () => {\n  const { list, playing, currentIndex } = useSelector((state: RootState) => state.player);\n  const dispatch = useDispatch();\n  const [showContainer, setShowContainer] = useState(false);\n  const [lyric, setLyric] = useState('');\n  const toggleContainer = useCallback(val => {\n    setShowContainer(val);\n  }, []);\n\n  const play = useCallback(id => {\n    const index = list.findIndex(t => t.id === id);\n    dispatch(getSongUrlById({ id, index }));\n  }, []);\n\n  useEffect(() => {\n    // 初始化歌词\n    setLyric('');\n    // 获取歌词\n    const fetch = async () => {\n      const id = list[currentIndex]?.id;\n      if (id) {\n        const result = await getSongLyric(id);\n        if (result.data.lrc) {\n          setLyric(result.data.lrc.lyric);\n        }\n      }\n    };\n    fetch();\n  }, [currentIndex, list]);\n  return (\n    <div className={styles.list}>\n      <Badge count={list.length} overflowCount={99} size=\"small\" offset={[5, 0]}>\n        <Button\n          onClick={() => toggleContainer(!showContainer)}\n          type=\"text\"\n          icon={<IconFont type=\"icon-music-list\" />}\n        />\n      </Badge>\n      {showContainer && (\n        <div className={styles.container}>\n          <div\n            className={styles.backImg}\n            style={{ backgroundImage: `url('${list[currentIndex].coverImgUrl}')` }}\n          />\n          <div className={styles.content}>\n            <div className={styles.listBox}>\n              <div className={styles.head}>播放列表</div>\n              <ScrollContainer>\n                {list.map((item, index) => (\n                  <div key={item.id} className={styles.item}>\n                    <div className={styles.index}>{index + 1}</div>\n                    <div className={styles.songName}>{item.name}</div>\n                    <div className={styles.songCreator}>{item.authors}</div>\n                    <div className={styles.second}>\n                      <Duration seconds={item.seconds} />\n                    </div>\n                    <div className={styles.canPlaying}>\n                      <Button\n                        shape=\"circle\"\n                        type=\"ghost\"\n                        size=\"small\"\n                        onClick={() => play(item.id)}\n                        icon={\n                          index === currentIndex && playing ? (\n                            <IconFont type=\"icon-pause\" />\n                          ) : (\n                            <IconFont type=\"icon-play\" />\n                          )\n                        }\n                      />\n                    </div>\n                  </div>\n                ))}\n              </ScrollContainer>\n            </div>\n            <div className={styles.lyricBox}>\n              <div className={styles.head}>歌词</div>\n              {lyric ? <Lyric lyric={lyric} /> : <div className={styles.noLyric}>暂无歌词</div>}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ListButton;\n","import React, { useCallback, useRef, useMemo, useState, useEffect } from 'react';\r\nimport { Button, Avatar, Slider } from 'antd';\r\nimport classNames from 'classnames';\r\nimport IconFont from '@components/IconFont';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '@/store/rootReducer';\r\nimport {\r\n  // setCurrentIndex,\r\n  setPlayedSconds,\r\n  togglePlaying,\r\n  getSongUrlById,\r\n  setPlaying,\r\n} from '@/store/playerSlice';\r\nimport Duration from '@components/Duration';\r\nimport Volume from '@components/Volume';\r\nimport ListButton from '@components/ListButton';\r\nimport styles from './index.module.less';\r\n\r\nconst DEFAULT_COVER_IMAGE = 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png';\r\n\r\nconst Player = () => {\r\n  const { currentIndex, currentUrl, list, playing } = useSelector(\r\n    (state: RootState) => state.player,\r\n  );\r\n  const dispatch = useDispatch();\r\n  const RPlayer = useRef<HTMLAudioElement>(null);\r\n  const [progressValue, setProgressValue] = useState(0);\r\n  // 总时长\r\n  const [duration, setDuration] = useState(0);\r\n  // 拖动进度条时不更新数据\r\n  const [seeking, setSeeking] = useState(false);\r\n  const [volume, setVolume] = useState(60);\r\n  // 类似computed效果\r\n  const hasPrevSong = useMemo(() => currentIndex > 0, [currentIndex]);\r\n  const hasNextSong = useMemo(() => currentIndex < list.length - 1, [currentIndex, list]);\r\n  const hastSong = useMemo(() => list.length > 0, [list]);\r\n\r\n  // redux\r\n  const togglePlay = useCallback(val => {\r\n    dispatch(togglePlaying({ playing: val }));\r\n  }, []);\r\n\r\n  const prevSong = useCallback(() => {\r\n    const index = currentIndex - 1;\r\n    dispatch(getSongUrlById({ id: list[index].id, index }));\r\n  }, [list, currentIndex]);\r\n\r\n  const nextSong = useCallback(() => {\r\n    const index = currentIndex + 1;\r\n    dispatch(getSongUrlById({ id: list[index].id, index }));\r\n  }, [list, currentIndex]);\r\n\r\n  const onEndedSong = useCallback(() => {\r\n    if (currentIndex < list.length - 1) {\r\n      nextSong();\r\n    } else {\r\n      dispatch(setPlaying({ playing: false }));\r\n    }\r\n  }, [list, currentIndex]);\r\n\r\n  // audio ontimeupdate事件每隔250ms触发一次\r\n  const onTimeUpdate = useCallback(() => {\r\n    dispatch(setPlayedSconds({ playedSeconds: RPlayer.current!.currentTime }));\r\n    if (!seeking) {\r\n      setProgressValue(RPlayer.current!.currentTime);\r\n    }\r\n  }, []);\r\n\r\n  const onDuration = useCallback(() => {\r\n    setDuration(RPlayer.current!.duration);\r\n  }, []);\r\n\r\n  // 本地状态\r\n  const onVolumeChange = useCallback(val => {\r\n    setVolume(val);\r\n  }, []);\r\n\r\n  const progressChange = useCallback(val => {\r\n    setSeeking(true);\r\n    setProgressValue(val);\r\n  }, []);\r\n\r\n  const progressAfterChange = useCallback(val => {\r\n    setSeeking(false);\r\n    RPlayer.current!.currentTime = val;\r\n  }, []);\r\n\r\n  // 音量控制\r\n  useEffect(() => {\r\n    RPlayer.current!.volume = volume / 100;\r\n  }, [volume]);\r\n\r\n  // 根据播放状态及当前歌曲切换播放暂停\r\n  useEffect(() => {\r\n    if (playing) {\r\n      RPlayer.current!.play();\r\n    } else {\r\n      RPlayer.current!.pause();\r\n    }\r\n  }, [currentIndex, playing]);\r\n\r\n  useEffect(() => {\r\n    RPlayer.current!.addEventListener('timeupdate', onTimeUpdate);\r\n    RPlayer.current!.addEventListener('ended', onEndedSong);\r\n    RPlayer.current!.addEventListener('durationchange', onDuration);\r\n    return () => {\r\n      RPlayer.current!.removeEventListener('timeupdate', onTimeUpdate);\r\n      RPlayer.current!.removeEventListener('ended', onEndedSong);\r\n      RPlayer.current!.removeEventListener('durationchange', onDuration);\r\n    };\r\n  }, [RPlayer.current, currentIndex]);\r\n  return (\r\n    <div className={styles.player}>\r\n      <audio ref={RPlayer} src={currentUrl} preload=\"auto\"></audio>\r\n      <div className={styles.audio}>\r\n        <div className={styles.controller}>\r\n          <div className={styles.button}>\r\n            <Button\r\n              onClick={prevSong}\r\n              disabled={!hasPrevSong}\r\n              shape=\"circle\"\r\n              type=\"ghost\"\r\n              icon={<IconFont type=\"icon-prev\" />}\r\n            />\r\n          </div>\r\n          <div className={styles.button}>\r\n            <Button\r\n              disabled={!hastSong}\r\n              onClick={() => togglePlay(!playing)}\r\n              shape=\"circle\"\r\n              type=\"ghost\"\r\n              size=\"large\"\r\n              icon={\r\n                playing ? (\r\n                  <IconFont style={{ fontSize: 25 }} type=\"icon-pause\" />\r\n                ) : (\r\n                  <IconFont type=\"icon-play\" />\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n          <div className={styles.button}>\r\n            <Button\r\n              onClick={nextSong}\r\n              disabled={!hasNextSong}\r\n              shape=\"circle\"\r\n              type=\"ghost\"\r\n              icon={<IconFont type=\"icon-next\" />}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles.main}>\r\n          <Avatar\r\n            className={classNames(styles.coverImage, { [styles.spin]: playing })}\r\n            src={list[currentIndex]?.coverImgUrl ?? DEFAULT_COVER_IMAGE}\r\n          />\r\n          <div className={styles.content}>\r\n            <div className={styles.head}>\r\n              <div>{list[currentIndex]?.name ?? '暂无'}</div>\r\n              <div>\r\n                <Duration seconds={progressValue} />\r\n                /\r\n                <Duration seconds={duration} />\r\n              </div>\r\n            </div>\r\n            <div className={styles.progress}>\r\n              <Slider\r\n                onAfterChange={progressAfterChange}\r\n                onChange={progressChange}\r\n                defaultValue={0}\r\n                tooltipVisible={false}\r\n                value={progressValue}\r\n                max={Math.floor(list[currentIndex]?.seconds)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.menu}>\r\n          <div className={styles.button}>\r\n            <Volume volume={volume} onChange={onVolumeChange} />\r\n          </div>\r\n          {/* <div className={styles.button}>\r\n            <Button type=\"text\" icon={<SyncOutlined color=\"#fff\" />} />\r\n          </div> */}\r\n          <div className={styles.button}>\r\n            <ListButton />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.less';\nimport IconFont from '../IconFont';\nimport Player from '../Player';\n\nconst PlayerBox = () => {\n  // TODO 播放器容器暂时展开\n  const [isLock, setLock] = useState(true);\n  const toggltLock = useCallback(val => {\n    setLock(val);\n  }, []);\n  return (\n    <div className={classNames(styles.playerBox, { [styles.locked]: isLock })}>\n      <div className={styles.lockBox} onClick={() => toggltLock(!isLock)}>\n        <IconFont type={isLock ? 'icon-lock_fill' : 'icon-unlock_fill'} />\n      </div>\n      <div className={styles.player}>\n        <Player />\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerBox;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PlayerBox from '@components/PlayerBox';\nimport './App.css';\nimport { useDispatch } from 'react-redux';\nimport { setSongList } from './store/playerSlice';\n\nconst Home = React.lazy(() => import('@pages/home'));\nconst Album = React.lazy(() => import('@pages/album'));\n\nfunction App(): JSX.Element {\n  const dispatch = useDispatch();\n  // 初始化播放器数据\n  useEffect(() => {\n    const cache = localStorage.getItem('cache-song-list') || null;\n    if (cache) {\n      dispatch(setSongList({ data: JSON.parse(cache) }));\n    }\n  }, []);\n  return (\n    <Fragment>\n      <Router>\n        <React.Suspense fallback=\"加载中...\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/album/:id?\" exact component={Album} />\n          </Switch>\n        </React.Suspense>\n      </Router>\n      <PlayerBox />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport albumReducer from './albumSlice';\nimport playerReducer from './playerSlice';\n\nconst rootReducer = combineReducers({\n  album: albumReducer,\n  player: playerReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { useDispatch } from 'react-redux';\nimport rootReducer from './rootReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n    // serializableCheck: {\n    //   ignoredActions: ['player/setAudio'], // redux推荐只将可序列化的数据存入store，该配置忽略了该规则，因为我们需要全局共享audio实例\n    // },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: process.env.NODE_ENV !== 'production' ? middleware : [],\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').defult;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport './index.css';\n\nconst render = (): void => {\n  const App = require('./App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\n\n// 热更新\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./App', render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverBox\":\"lxJgT-fjjXw_7rraI7bYO\",\"player\":\"_3DhximAgjXprNcUZvJJBb4\",\"audio\":\"_1Pe6zvjWU7bP1BxTzrxfas\",\"controller\":\"_25Bhje6NAFAFpknQ8HFM4R\",\"button\":\"rurHG8HbXrba9qsVi4f3_\",\"menu\":\"tgQynu_4eKMbG5-UX8NkB\",\"main\":\"_2LSEyGu8uCYgyGJBEVdlkJ\",\"coverImage\":\"_2pf_EtHe9NDw5Z8fvato1L\",\"spin\":\"_30ngn5ABA0-3TrCmuuUD_R\",\"rotate\":\"VV3QjzPv7HgLzppge8uuk\",\"content\":\"_2LqOGvkdyJ1x7e0HI66wJg\",\"head\":\"_1RbOSRgvGKJaxeyTPBFW7m\",\"progress\":\"G4ENEoFI9vPatAgt8CmgA\"};","import { createFromIconfontCN } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2060370_k34zyn39meh.js',\n});\n\nexport default IconFont;\n","import { getSongUrl } from '@/api';\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nexport interface IList {\r\n  id: number; // 歌曲id\r\n  name: string; // 歌曲名\r\n  seconds: number; // 歌曲时长\r\n  authors: string; // 歌曲作者\r\n  coverImgUrl: string; // 歌曲封面\r\n  canPlaying: boolean; // 歌曲是否可以播放\r\n  url: string;\r\n}\r\n\r\ninterface IPlayerDefaultState {\r\n  currentIndex: number; // 当前播放歌曲\r\n  currentUrl: string;\r\n  playing: boolean;\r\n  loop: boolean;\r\n  playedSeconds: number;\r\n  list: IList[];\r\n}\r\n\r\nconst defaultState: IPlayerDefaultState = {\r\n  currentIndex: -1,\r\n  currentUrl: '',\r\n  playing: false,\r\n  loop: false,\r\n  playedSeconds: 0,\r\n  list: [],\r\n};\r\n\r\nexport const getSongUrlById = createAsyncThunk('player/getSongUrl', async (data: any) => {\r\n  const res = await getSongUrl(data.id);\r\n  return {\r\n    data: res.data,\r\n    index: data.index,\r\n  };\r\n});\r\n\r\nconst playerSlice = createSlice({\r\n  name: 'player',\r\n  initialState: defaultState,\r\n  extraReducers: builder => {\r\n    builder.addCase(getSongUrlById.fulfilled, (state, action) => {\r\n      state.currentUrl = action.payload.data.data[0].url;\r\n      state.currentIndex = action.payload.index;\r\n      state.playing = true;\r\n    });\r\n  },\r\n  reducers: {\r\n    setSongList: (state, action) => {\r\n      state.list = action.payload.data;\r\n      state.currentIndex = 0;\r\n      state.currentUrl = state.list[0].url;\r\n    },\r\n    setPlayedSconds: (state, action) => {\r\n      state.playedSeconds = action.payload.playedSeconds;\r\n    },\r\n    setPlaying: (state, action) => {\r\n      state.playing = action.payload.playing;\r\n    },\r\n    setCurrentIndex: (state, action) => {\r\n      state.currentIndex = action.payload.index;\r\n    },\r\n    togglePlaying: (state, action) => {\r\n      const { playing } = action.payload;\r\n      state.playing = playing;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setSongList,\r\n  setCurrentIndex,\r\n  togglePlaying,\r\n  setPlaying,\r\n  setPlayedSconds,\r\n} = playerSlice.actions;\r\n\r\nexport default playerSlice.reducer;\r\n","import React from 'react';\nimport moment from 'moment';\n\ninterface IProps {\n  className?: string;\n  seconds: number;\n}\n\nconst getDate = (seconds: number) => {\n  return new Date(seconds * 1000);\n};\n\nconst Duration = (props: IProps) => {\n  return <span className={props.className}>{moment(getDate(props.seconds)).utcOffset(0).format('mm:ss')}</span>;\n};\n\nexport default Duration;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerBox\":\"_1URRVA-GI-BhQrZHYVMx7q\",\"lockBox\":\"_3x_32CtSBvIaSYOhs1xoFw\",\"locked\":\"_1KXt7a7thzbSV41Jrlm5r3\",\"player\":\"_2FmyDK_X0toHzM-xWlgwrg\"};","import { AxiosResponse, AxiosRequestConfig } from 'axios';\n\nconst axiosConfig: AxiosRequestConfig = {\n  baseURL: '/',\n  // 请求后的数据处理\n  transformResponse: [\n    function (data: AxiosResponse): AxiosResponse {\n      return data;\n    },\n  ],\n  timeout: 30000,\n  responseType: 'json',\n  // 最大响应数据大小\n  maxContentLength: 2000,\n  // 自定义错误状态码范围\n  validateStatus: function (status: number) {\n    return status >= 200 && status < 300;\n  },\n};\n\nexport default axiosConfig;\n","import axios, { AxiosRequestConfig } from 'axios';\nimport config from './config';\n\nconst pending: Array<{\n  url: string;\n  cancel: Function;\n}> = [];\n\nconst cancelToken = axios.CancelToken;\n\nconst removePending = (config: AxiosRequestConfig) => {\n  for (const p in pending) {\n    const item: any = p;\n    const list: any = pending[p];\n    // 当前请求在数组中存在时执行函数体\n    if (list.url === config.url + '&request_type=' + config.method) {\n      // 执行取消操作\n      list.cancel();\n      // 从数组中移除记录\n      pending.splice(item, 1);\n    }\n  }\n};\n\nconst request = axios.create(config);\n\n// 添加请求拦截器\nrequest.interceptors.request.use(\n  config => {\n    removePending(config);\n    config.cancelToken = new cancelToken(c => {\n      pending.push({\n        url: config.url + '&request_type=' + config.method,\n        cancel: c,\n      });\n    });\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  },\n);\n\n// 返回状态判断(添加响应拦截器)\nrequest.interceptors.response.use(\n  res => {\n    removePending(res.config);\n    return res;\n  },\n  error => {\n    return Promise.reject(error);\n  },\n);\n\nexport default request;\n","import request from './request';\nimport { AxiosResponse } from 'axios';\nconst baseUrl = 'https://api.xujianfeng.club';\n\n/**\n * 获取首页轮播图\n * @param {string} type [0:pc;1:android;2:iphone;3:ipad]\n */\nfunction getBanner(type: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/banner?type=${type}`);\n}\n\n/**\n * 获取歌单分类\n */\nfunction getCatlist(): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/catlist`);\n}\n\n/**\n * 获取歌单分类\n */\nfunction getHotCatlist(): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/hot`);\n}\n\n// 歌单查询参数\ninterface AlbumArg {\n  limit: number;\n  cat: string;\n  offset: number;\n  order?: string;\n}\n\n/**\n * 获取歌单\n */\nfunction getAlbumList({ limit, cat, offset = 0, order = 'hot' }: AlbumArg): Promise<AxiosResponse> {\n  return request.get(\n    `${baseUrl}/top/playlist/?limit=${limit}&order=${order}&offset=${offset}&cat=${cat}`,\n  );\n}\n\n/**\n * 获取（歌单）专辑 详情\n * @param {string} id\n */\nfunction getAlbumDetail(id: string): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/playlist/detail?id=${id}`);\n}\n\n/**\n * 获取歌曲列表\n * @param {string} id\n */\nfunction getSongList(ids: string): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/song/detail?ids=${ids}`);\n}\n\n/**\n * 获取歌曲播放链接\n * @param {number} id\n */\nfunction getSongUrl(id: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/song/url?id=${id}`);\n}\n\n/**\n * 获取歌曲歌词\n * @param {number} id\n */\nfunction getSongLyric(id: number): Promise<AxiosResponse> {\n  return request.get(`${baseUrl}/lyric?id=${id}`);\n}\n\nexport {\n  getBanner,\n  getCatlist,\n  getHotCatlist,\n  getAlbumList,\n  getAlbumDetail,\n  getSongList,\n  getSongUrl,\n  getSongLyric,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1y9RWNpnFF9NnWRjrpfKOK\",\"scrollContent\":\"_1lIo99iXuF_CW3FF83M_DZ\",\"scrollBar\":\"_1_rEIrL1zBBv65zuNSJ9E7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lyrContainer\":\"_1a6TKPrmA2yA-mdG0ocUF7\",\"line\":\"_3xHnyZFn_a2C6Pr6h7xKOP\",\"active\":\"Uiru2n3655rzFDIkKA2BE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volume\":\"_14kz-6xQSn7TCbxYi2SFtB\",\"content\":\"UhJJOr8LRnntL8T0glbT2\"};","import { createSlice } from '@reduxjs/toolkit';\n\nexport interface IInfo {\n  albumId: string;\n  name: string;\n  nickname: string;\n  coverImgUrl: string;\n  description: string;\n  tags: string[];\n}\n\nexport interface IList {\n  id: number; // 歌曲id\n  name: string; // 歌曲名\n  seconds: number; // 歌曲时长\n  authors: string; // 歌曲作者\n  coverImgUrl: string; // 歌曲封面\n  canPlaying?: boolean; // 歌曲是否可以播放\n  url: string | null;\n}\n\ninterface IAlbumDefaultState {\n  info: IInfo;\n  list: IList[];\n}\n\nconst defaultState: IAlbumDefaultState = {\n  info: {\n    albumId: '',\n    name: '',\n    nickname: '',\n    coverImgUrl: '',\n    tags: [],\n    description: '',\n  },\n  list: [],\n};\n\nconst albumSlice = createSlice({\n  name: 'album',\n  initialState: defaultState,\n  reducers: {\n    setInfo: (state, action) => {\n      state.info = action.payload.data;\n    },\n    setList: (state, action) => {\n      state.list = action.payload.data;\n    },\n  },\n});\n\nexport const { setInfo, setList } = albumSlice.actions;\nexport default albumSlice.reducer;\n"],"sourceRoot":""}