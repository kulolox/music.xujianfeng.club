{"version":3,"sources":["components/CatList/index.module.less","pages/home/index.module.less","assets/imgs/default_image.svg","components/CatList/index.tsx","components/LazyImage/index.tsx","pages/home/index.tsx"],"names":["module","exports","CheckableTag","Tag","CatList","props","className","styles","catList","map","cat","key","type","catItem","catType","typeName","catContent","list","t","name","tag","checked","selectedCat","onClick","onSelect","LazyImage","useState","isOnload","setOnload","useEffect","img","Image","src","onload","IMAGE_PLACHOLDER","style","width","height","alt","banners","setBanner","pageNo","setPageNo","showCatList","setShowCatList","totalAlbum","setTotalAlbum","setCat","setCatList","albumList","setAlbumList","getCatlistFunc","useCallback","a","getCatlist","data","categories","sub","rec","Object","keys","forEach","push","parseInt","filter","s","category","getAlbumListFunc","params","limit","offset","getAlbumList","playlists","album","id","coverImgUrl","playCount","creator","total","onPageNoChange","pageIndex","catSelect","getBanner","then","scm","imageUrl","fetchData","home","banner","autoplay","item","albumBox","head","placement","visible","title","size","content","trigger","IconFont","to","cover","fontSize","marginRight","creatorName","nickname","pagination","defaultCurrent","current","onChange","defaultPageSize","showSizeChanger"],"mappings":"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","file":"static/js/6.f58dc9c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"catList\":\"_1IHqZ7TsaDE8Ngv4uSf5qu\",\"catItem\":\"_38DSH0E-N9tZR-hZgzSvPR\",\"catType\":\"_3wdIjXHxqHigRqzU1cmltZ\",\"catContent\":\"_2-mJk-pAJcaTLR3K4nURiI\",\"tag\":\"L3wU0C7Qni67aBe78g3NU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"_1rW0pNaf1fNsEyxJ1Mfjzu\",\"banner\":\"G4VUxEqZqIoioLbBhHmct\",\"albumBox\":\"DSzUk1jApFhiIiiziwiiJ\",\"head\":\"_2qTOssJ7ve0FOWL8WR9KrZ\",\"cat\":\"_1NoybZxao81Sn19h6H-CCt\",\"list\":\"_1LyBgoCtD8vu00-fH7p4bX\",\"album\":\"_25TOVTjWvPZEpDlZ4Ctxbi\",\"cover\":\"_12_QnF4bHP0O3Cx_-GWY_i\",\"playCount\":\"tcVtdPf6Ib8JCZMb4hjSI\",\"creatorName\":\"CRwK1pNC0vrWnK4-lgwX5\",\"name\":\"_2M4N4JW1q7OQBBF9dnfQqx\",\"pagination\":\"_1QrPHZIz1OLO5wAAzxjVHI\"};","module.exports = __webpack_public_path__ + \"static/media/default_image.3590e8c0.svg\";","import React from 'react';\nimport { Tag } from 'antd';\nimport { ICatList } from '@pages/home';\nimport styles from './index.module.less';\n\ninterface Iprops {\n  catList: ICatList[];\n  onSelect: Function;\n  selectedCat: string;\n}\n\nconst { CheckableTag } = Tag;\n\nconst CatList = (props: Iprops) => {\n  return (\n    <div className={styles.catList}>\n      {props.catList.map(cat => (\n        <div key={cat.type} className={styles.catItem}>\n          <div className={styles.catType}>{cat.typeName}</div>\n          <div className={styles.catContent}>\n            {cat.list.map((t: { name: string }) => (\n              <CheckableTag\n                key={t.name}\n                className={styles.tag}\n                checked={props.selectedCat === t.name}\n                onClick={() => props.onSelect(t.name)}\n              >\n                {t.name}\n              </CheckableTag>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CatList;\n","import React, { useState, useEffect } from 'react';\nimport IMAGE_PLACHOLDER from '@/assets/imgs/default_image.svg';\n\ninterface IProps {\n  src: string;\n  width: string;\n  height: string;\n}\n\nconst LazyImage = (props: IProps) => {\n  const [isOnload, setOnload] = useState(false);\n  useEffect(() => {\n    const img = new Image();\n    img.src = props.src;\n    img.onload = () => {\n      setOnload(true);\n    };\n  }, []);\n  return (\n    <img\n      src={isOnload ? props.src : IMAGE_PLACHOLDER}\n      style={{\n        width: props.width,\n        height: props.height,\n      }}\n      alt=\"\"\n    />\n  );\n};\n\nexport default LazyImage;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Popover, Button, Carousel, Pagination } from 'antd';\nimport { getAlbumList, getCatlist, getBanner } from '@/api';\nimport CatList from '@/components/CatList';\nimport IconFont from '@/components/IconFont';\nimport styles from './index.module.less';\nimport '@/css/animation.less';\nimport LazyImage from '@/components/LazyImage';\n\ninterface IBanner {\n  scm: string;\n  imageUrl: string;\n}\n\nexport interface ICatList {\n  type: number;\n  typeName: string;\n  list: [];\n}\n\ninterface IAblumList {\n  id: string;\n  coverImgUrl: string;\n  playCount: number;\n  name: string;\n  creator: any;\n}\n\nconst LIMIT = 35;\n\nexport default (): JSX.Element => {\n  const [banners, setBanner] = useState<IBanner[]>([]);\n  // 页码\n  const [pageNo, setPageNo] = useState(1);\n  const [showCatList, setShowCatList] = useState(false);\n  // 总专辑数\n  const [totalAlbum, setTotalAlbum] = useState(0);\n  // 当前风格\n  const [cat, setCat] = useState('全部');\n  const [catList, setCatList] = useState<ICatList[]>([]);\n  // 歌单数据\n  const [albumList, setAlbumList] = useState<IAblumList[]>([]);\n\n  // 获取风格列表\n  const getCatlistFunc = useCallback(async () => {\n    const { data } = await getCatlist();\n    const { categories, sub } = data;\n    const rec: ICatList[] = [];\n    Object.keys(categories).forEach(t => {\n      rec.push({\n        type: parseInt(t),\n        typeName: categories[t],\n        list: sub.filter((s: { category: number }) => s.category === parseInt(t)),\n      });\n    });\n    setCatList(rec);\n  }, []);\n\n  // 获取专辑列表\n  const getAlbumListFunc = useCallback(async (params = { cat: cat, limit: LIMIT, offset: 0 }) => {\n    const { data } = await getAlbumList(params);\n    setAlbumList(\n      data.playlists.map((album: IAblumList) => ({\n        id: album.id,\n        coverImgUrl: album.coverImgUrl,\n        playCount: album.playCount,\n        name: album.name,\n        creator: album.creator,\n      })),\n    );\n    setTotalAlbum(data.total);\n  }, []);\n\n  // 分页变动\n  const onPageNoChange = useCallback(pageIndex => {\n    const params = {\n      cat,\n      limit: LIMIT,\n      offset: pageIndex * LIMIT,\n    };\n    setPageNo(pageIndex);\n    getAlbumListFunc(params);\n  }, []);\n\n  // 风格切换\n  const catSelect = useCallback(cat => {\n    const params = {\n      cat,\n      limit: LIMIT,\n      offset: 0,\n    };\n    setShowCatList(false);\n    setCat(cat);\n    setPageNo(1);\n    getAlbumListFunc(params);\n  }, []);\n\n  useEffect(() => {\n    async function fetchData(): Promise<void> {\n      // 获取顶部轮播图\n      getBanner(0).then(({ data }) => {\n        setBanner(\n          data.banners.map((t: IBanner) => ({\n            scm: t.scm,\n            imageUrl: t.imageUrl,\n          })),\n        );\n      });\n      // 获取歌单分类\n      getCatlistFunc();\n\n      // 初始化歌单数据\n      getAlbumListFunc();\n    }\n    fetchData();\n  }, [setBanner]);\n  return (\n    <div className={styles.home}>\n      <div className={styles.banner}>\n        <Carousel autoplay>\n          {(banners as IBanner[]).map(banner => (\n            <div key={banner.scm} className={styles.item}>\n              <img src={banner.imageUrl} alt=\"\" />\n            </div>\n          ))}\n        </Carousel>\n      </div>\n      <div className={styles.albumBox}>\n        <div className={styles.head}>\n          <Popover\n            placement=\"topLeft\"\n            visible={showCatList}\n            title={\n              <Button size=\"small\" onClick={() => catSelect('全部')}>\n                全部风格\n              </Button>\n            }\n            content={<CatList catList={catList} selectedCat={cat} onSelect={catSelect} />}\n            trigger=\"click\"\n          >\n            <Button onClick={() => setShowCatList(!showCatList)}>\n              选择风格\n              <IconFont type=\"icon-up\" />\n            </Button>\n          </Popover>\n          <div className={styles.cat}>当前风格：{cat}</div>\n        </div>\n        <div className={styles.list}>\n          {albumList.map(album => (\n            <Link key={album.id} className={styles.album} to={`/album/${album.id}`}>\n              <div className=\"hoverBox\">\n                <div className={styles.cover}>\n                  <LazyImage src={album.coverImgUrl} width=\"100%\" height=\"auto\" />\n                  {/* <img src={album.coverImgUrl} /> */}\n                  <div className={styles.playCount}>\n                    <IconFont type=\"icon-play-count\" style={{ fontSize: 16, marginRight: 2 }} />\n                    <span>{album.playCount}</span>\n                  </div>\n                  <div className={styles.creatorName}>{album.creator.nickname}</div>\n                </div>\n                <div className={styles.name}>{album.name}</div>\n              </div>\n            </Link>\n          ))}\n        </div>\n        <div className={styles.pagination}>\n          <Pagination\n            defaultCurrent={1}\n            current={pageNo}\n            total={totalAlbum}\n            onChange={onPageNoChange}\n            defaultPageSize={LIMIT}\n            showSizeChanger={false}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}