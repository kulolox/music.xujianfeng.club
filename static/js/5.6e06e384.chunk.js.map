{"version":3,"sources":["components/LazyImage/index.tsx","assets/imgs/default_image.svg","components/Loadinger/index.tsx","components/Category/index.module.less","components/Category/List/index.module.less","pages/home/index.module.less","components/Category/List/index.tsx","components/Category/index.tsx","pages/home/index.tsx"],"names":["LazyImage","props","useState","isOnload","setOnload","useEffect","img","Image","src","onload","IMAGE_PLACHOLDER","style","width","height","border","alt","module","exports","minHeight","display","justifyContent","alignItems","tip","text","indicator","fontSize","CheckableTag","Tag","List","className","styles","catList","map","cat","key","type","catItem","catType","typeName","catContent","list","t","name","tag","checked","selectedCat","onClick","onSelect","showCatList","setShowCatList","setCatList","getCatlist","then","res","data","categories","sub","Object","keys","forEach","push","parseInt","filter","s","category","placement","visible","content","currentCat","val","catSelect","trigger","IconFont","initalState","banners","pageNo","loading","totalCount","albumList","homeReducer","state","action","payload","useImmerReducer","dispatch","getBanner","scm","imageUrl","a","getAlbumList","limit","offset","playlists","album","id","coverImgUrl","playCount","creator","total","fetchData","home","banner","autoplay","item","albumBox","Category","Loadinger","to","cover","marginRight","creatorName","nickname","pagination","defaultCurrent","current","onChange","pageIndex","defaultPageSize","showSizeChanger"],"mappings":"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","file":"static/js/5.6e06e384.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport IMAGE_PLACHOLDER from '@/assets/imgs/default_image.svg';\n\ninterface IProps {\n  src: string;\n  width: string;\n  height: string;\n  border?: boolean;\n}\n\nconst LazyImage = (props: IProps) => {\n  const [isOnload, setOnload] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = props.src;\n    img.onload = () => {\n      setOnload(true);\n    };\n  }, [props.src]);\n\n  return (\n    <img\n      src={isOnload ? props.src : IMAGE_PLACHOLDER}\n      style={{\n        width: props.width,\n        height: props.height,\n        border: props.border ? '1px solid #f1f1f1' : 'none',\n      }}\n      alt=\"\"\n    />\n  );\n};\n\nexport default LazyImage;\n","module.exports = __webpack_public_path__ + \"static/media/default_image.3590e8c0.svg\";","import React from 'react';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\ninterface IProps {\n  text?: string;\n}\n\nexport default (props: IProps) => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        minHeight: '30vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Spin tip={props.text ?? ''} indicator={<LoadingOutlined style={{ fontSize: 24 }} />} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"_3mAHRFcYGDiGQD5NjIXGPy\",\"cat\":\"_2fL91aoxtpB750p_bV8Grf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catList\":\"mEruZ2ckuwrGDZ2MSXJCo\",\"catItem\":\"_2O84mjn8D8wOpxfnqEOtXv\",\"catType\":\"_3oAYWiiJH6phwibICqvAt3\",\"catContent\":\"gTqd4UnIQvBWXOCowsaEq\",\"tag\":\"_3DVQ_vSuNEcYjSVWusAXTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"_1rW0pNaf1fNsEyxJ1Mfjzu\",\"albumBox\":\"DSzUk1jApFhiIiiziwiiJ\",\"list\":\"_1LyBgoCtD8vu00-fH7p4bX\",\"album\":\"_25TOVTjWvPZEpDlZ4Ctxbi\",\"cover\":\"_12_QnF4bHP0O3Cx_-GWY_i\",\"playCount\":\"tcVtdPf6Ib8JCZMb4hjSI\",\"creatorName\":\"CRwK1pNC0vrWnK4-lgwX5\",\"name\":\"_2M4N4JW1q7OQBBF9dnfQqx\",\"pagination\":\"_1QrPHZIz1OLO5wAAzxjVHI\"};","import React from 'react';\nimport { Tag } from 'antd';\nimport { ICat } from '@/interfaces';\nimport styles from './index.module.less';\n\ninterface Iprops {\n  catList: ICat[];\n  onSelect: Function;\n  selectedCat: string;\n}\n\nconst { CheckableTag } = Tag;\n\nconst List = (props: Iprops) => {\n  return (\n    <div className={styles.catList}>\n      {props.catList.map(cat => (\n        <div key={cat.type} className={styles.catItem}>\n          <div className={styles.catType}>{cat.typeName}</div>\n          <div className={styles.catContent}>\n            {cat.list.map((t: { name: string }) => (\n              <CheckableTag\n                key={t.name}\n                className={styles.tag}\n                checked={props.selectedCat === t.name}\n                onClick={() => props.onSelect(t.name)}\n              >\n                {t.name}\n              </CheckableTag>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from 'react';\nimport { Popover, Button } from 'antd';\nimport { getCatlist } from '@/api';\nimport IconFont from '@/components/IconFont';\nimport styles from './index.module.less';\nimport { ICat } from '@/interfaces';\nimport '@/css/animation.less';\nimport List from './List';\n\ninterface IProps {\n  currentCat: string;\n  catSelect: Function;\n}\n\nexport default (props: IProps): JSX.Element => {\n  const [showCatList, setShowCatList] = useState(false);\n  // 分类表\n  const [catList, setCatList] = useState<ICat[]>([]);\n\n  const onSelect = (val: string) => {\n    props.catSelect(val);\n    setShowCatList(false);\n  };\n\n  useEffect(() => {\n    getCatlist().then(res => {\n      const { categories, sub } = res.data;\n      const list: ICat[] = [];\n      Object.keys(categories).forEach(t => {\n        list.push({\n          type: parseInt(t),\n          typeName: categories[t],\n          list: sub.filter((s: { category: number }) => s.category === parseInt(t)),\n        });\n      });\n      setCatList(list);\n    });\n  }, []);\n\n  return (\n    <div className={styles.category}>\n      <Popover\n        placement=\"topLeft\"\n        visible={showCatList}\n        content={<List catList={catList} selectedCat={props.currentCat} onSelect={onSelect} />}\n        trigger=\"click\"\n      >\n        <Button onClick={() => setShowCatList(!showCatList)}>\n          选择风格\n          <IconFont type=\"icon-up\" />\n        </Button>\n      </Popover>\n      <div className={styles.cat}>当前风格：{props.currentCat}</div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Carousel, Pagination } from 'antd';\nimport { useImmerReducer } from 'use-immer';\nimport { getAlbumList, getBanner } from '@/api';\nimport { IBanner, IAblum } from '@/interfaces';\nimport IconFont from '@/components/IconFont';\nimport LazyImage from '@/components/LazyImage';\nimport Category from '@/components/Category';\nimport '@/css/animation.less';\nimport styles from './index.module.less';\nimport Loadinger from '@/components/Loadinger';\n\ninterface IState {\n  banners: IBanner[];\n  pageNo: number;\n  loading: boolean;\n  totalCount: number;\n  cat: string;\n  albumList: IAblum[];\n}\nconst LIMIT = 35;\n\nconst initalState: IState = {\n  banners: [],\n  pageNo: 1,\n  loading: false,\n  totalCount: 0,\n  cat: '华语',\n  albumList: [],\n};\n// userReducer 整个多个state\nfunction homeReducer(state: IState, action: any) {\n  switch (action.type) {\n    case 'GET_BANNER': {\n      state.banners = action.payload;\n      return;\n    }\n    case 'GET_ALBUM_LIST': {\n      const { albumList, totalCount } = action.payload;\n      state.albumList = albumList;\n      state.totalCount = totalCount;\n      return;\n    }\n    case 'CAT_SELECT': {\n      state.pageNo = 1;\n      state.cat = action.payload;\n      return;\n    }\n    case 'PAGE_CHANGE': {\n      state.pageNo = action.payload;\n      return;\n    }\n    case 'SET_PAGE_LOADING': {\n      state.loading = action.payload;\n      return;\n    }\n    default:\n      return;\n  }\n}\n\nexport default (): JSX.Element => {\n  const [state, dispatch] = useImmerReducer(homeReducer, initalState);\n  const { banners, pageNo, loading, totalCount, cat, albumList } = state;\n\n  // 分页变动\n  const onPageNoChange = (pageIndex: number) => {\n    dispatch({\n      type: 'PAGE_CHANGE',\n      payload: pageIndex,\n    });\n  };\n\n  // 风格切换\n  const catSelect = (cat: string) => {\n    dispatch({\n      type: 'CAT_SELECT',\n      payload: cat,\n    });\n  };\n\n  // 获取轮播图\n  useEffect(() => {\n    getBanner(0).then(res => {\n      dispatch({\n        type: 'GET_BANNER',\n        payload: res.data.banners.map((t: IBanner) => ({\n          scm: t.scm,\n          imageUrl: t.imageUrl,\n        })),\n      });\n    });\n  }, [dispatch]);\n\n  // 获取专辑列表\n  useEffect(() => {\n    async function fetchData() {\n      // loading开始\n      dispatch({\n        type: 'SET_PAGE_LOADING',\n        payload: true,\n      });\n      const { data } = await getAlbumList({\n        cat,\n        limit: LIMIT,\n        offset: (pageNo - 1) * LIMIT,\n      });\n      // 更新歌单列表\n      dispatch({\n        type: 'GET_ALBUM_LIST',\n        payload: {\n          albumList: data.playlists.map((album: IAblum) => ({\n            id: album.id,\n            coverImgUrl: album.coverImgUrl,\n            playCount: album.playCount,\n            name: album.name,\n            creator: album.creator,\n          })),\n          totalCount: data.total,\n        },\n      });\n      // loading结束\n      dispatch({\n        type: 'SET_PAGE_LOADING',\n        payload: false,\n      });\n    }\n    fetchData();\n  }, [cat, dispatch, pageNo]);\n\n  return (\n    <div className={styles.home}>\n      <div className={styles.banner}>\n        <Carousel autoplay>\n          {banners.map(banner => (\n            <div key={banner.scm} className={styles.item}>\n              <img src={banner.imageUrl} alt=\"\" />\n            </div>\n          ))}\n        </Carousel>\n      </div>\n      <div className={styles.albumBox}>\n        <Category currentCat={cat} catSelect={catSelect} />\n        <div className={styles.list}>\n          {loading ? (\n            <Loadinger text=\"Loading...\" />\n          ) : (\n            albumList.map(album => (\n              <Link key={album.id} className={styles.album} to={`/album/${album.id}`}>\n                <div className=\"hoverBox\">\n                  <div className={styles.cover}>\n                    <LazyImage src={album.coverImgUrl} width=\"100%\" height=\"auto\" />\n                    <div className={styles.playCount}>\n                      <IconFont type=\"icon-play-count\" style={{ fontSize: 16, marginRight: 2 }} />\n                      <span>{album.playCount}</span>\n                    </div>\n                    <div className={styles.creatorName}>{album.creator.nickname}</div>\n                  </div>\n                  <div className={styles.name}>{album.name}</div>\n                </div>\n              </Link>\n            ))\n          )}\n        </div>\n\n        <Pagination\n          className={styles.pagination}\n          defaultCurrent={1}\n          current={pageNo}\n          total={totalCount}\n          onChange={onPageNoChange}\n          defaultPageSize={LIMIT}\n          showSizeChanger={false}\n        />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}